variables:
  GIT_SUBMODULE_STRATEGY: recursive  # Cloner les sous-modules
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  # `-s makes make use repository-local settings that include proxy config`
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -s $CI_PROJECT_DIR/ci_settings.xml"
  HTTP_PROXY: "http://proxy.univ-lyon1.fr:3128"
  http_proxy: "http://proxy.univ-lyon1.fr:3128"
  HTTPS_PROXY: "http://proxy.univ-lyon1.fr:3128"
  https_proxy: "http://proxy.univ-lyon1.fr:3128"
  NO_PROXY: "localhost,127.0.0.1,forge.univ-lyon1.fr,docker"

stages: # Diffrents job a executer dans l'ordre
  - build
  - test
  - sonarqube-check

cache:
  paths:
    - .m2/repository

# Job pour construire le frontend Vue.js
build-frontend: 
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive  # Cloner les sous-modules
  image: node:16
  script:
    - cd lomebordesfront/frontend
    - npm install
    - npm run build

# Job pour construire le backend Spring Boot
build-backend:
  stage: build
  image: maven:3.9-eclipse-temurin-17
  script:
    - cd lomebordes/backend
    - mvn $MAVEN_CLI_OPTS clean install -DskipTests
  artifacts:
    paths:
      - lomebordes/backend/target/*.jar




# Job pour tester le frontend Vue.js
# test-frontend:
#   stage: test
#   script:
#     - cd lomebordesfront/frontend
#     - npm run test --coverage

# Job pour tester le backend Spring Boot
test-backend:
  stage: test
  image: maven:3.9-eclipse-temurin-17
  script:
    - cd lomebordes/backend
    - mvn $MAVEN_CLI_OPTS clean test 


sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - main


